
{
  "title":"Core Elements of a Program",
  "content":"« Previous | Next »\nSession Overview This lecture covers the building blocks of straight line and branching programs: objects, types, operators, variables, execution, and conditional statements.\nImage courtesy of southtyrolean on Flickr.\nSession Activities Lecture Videos Lecture 2: Core Elements of a Program About this Video Topics covered: IDLE, types of objects, operators, overloading, commands, variables, assignment, input, straight line and branching programs, looping constructs, Turing completeness, conditionals, nesting.\nResources Lecture code handout (PDF) Lecture code (PY) Recitation Videos Recitation 1: Introduction to Coding Concepts About this Video Topics covered: Syntax, semantics, object types, comparison, loops, coding.\nCheck Yourself What is a \u0026rsquo;type'?\n› View/hide answer\nTypes are classifications of objects, which is what Python, as an OOP language, deals with. They determine how those objects are dealt with (for example, adding two integers results in an integer, two strings results in a concatenated string, and an integer and a string results in an error).\nWhat is an \u0026rsquo;expression'?\n› View/hide answer\nAn expression is composed of objects (or operands) and operators, and can be interpreted into a value.\nWhat is a type conversion?\n› View/hide answer\nA type conversion turns one type of object into another. For example, applying str to the integer 3 results in the string \u0026lsquo;3\u0026rsquo;.\nWhat is a keyword?\n› View/hide answer\nKeywords are words that have special meanings within a language. Many editors will display them in special colors. These words cannot be used as variables.\nWhat is the difference between a straight line program and a branching program?\n› View/hide answer\nA straight line program simply goes through and carries out each step. A branching program will do different things depending on conditions set within the program.\nWhat is a conditional?\n› View/hide answer\nA conditional statement starts with an if statement, and can also include elif and else statements.\nProblem Sets Problem Set 0: Introduction to Python and IDLE (Due) This problem set will introduce you to the programming environment IDLE and to programming in Python, as well as to our general problem set structure. In this problem set, you will install IDLE, write a simple Python program, and hand it in. Be sure to read this problem set thoroughly, especially the sections of Collaboration and the Hand-in Procedure.\nInstructions (PDF) Problem Set 1 (Assigned) Problem set 1 is assigned in this session. The instructions and solutions can be found on the session page where it is due, Lecture 4 Machine Interpretation of a Program.\n« Previous | Next »\n"}


