
{
  "title":"Introduction to 6.00",
  "content":"« Previous | Next »\nSession Overview This lecture covers course expectations, introduces computer programming and its uses, and begins to familiarize you with concepts related to how programs work.\nSession Activities Lecture Videos Lecture 1: Introduction to 6.00 About this Video Topics covered: Purposes of the course, declarative and imperative knowledge, flow of control, algorithms, fixed program and stored program computers, termination conditions, interpretation, compilation, syntax, static semantics, semantics, and types of errors.\nResources Lecture slides (PDF) Check Yourself What is the difference between declarative and imperative knowledge?\n› View/hide answer\nDeclarative knowledge is statements of fact; imperative knowledge is \u0026ldquo;how to\u0026rdquo; knowledge.\nWhat is the advantage of a stored-program computer?\n› View/hide answer\nIt\u0026rsquo;s far more versatile than a fixed-program computer, since it interprets a program given to it and carries out those instructions, as opposed to being built to do one thing.\nWhat are the syntax, static semantics, and semantics of a language?\n› View/hide answer\nSyntax determines whether a string is legal, static semantics determine whether the string has meaning, and semantics assigns a meaning to a legal sentence (assuming no static semantic errors).\nWhat sorts of errors can occur in a program?\n› View/hide answer\nIt can crash, run forever, or give a wrong answer.\nProblem Sets Problem Set 0 (Assigned) Problem set 0 is assigned in this session. This is an ungraded problem set. The instructions can be found on the session page where it is due, Lecture 2 Core Elements of a Program.\nFurther Study These optional resources are provided for students that wish to explore this topic more fully.\nReadings After watching the lecture, you may want to view some of the following resources:\nThe Python Standard Library 6.01SC Introduction to Electrical Engineering and Computer Science I « Previous | Next »\n"}


