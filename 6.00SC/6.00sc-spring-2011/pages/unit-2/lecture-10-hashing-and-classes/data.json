
{
  "title":"Hashing and Classes",
  "content":"« Previous | Next »\nSession Overview This lecture starts by showing how hashing can be used to achieve near constant time lookups and the concept of classes as understood by a computer. It then introduces exceptions.\nImage courtesy of donovanbeeson on Flickr.\nSession Activities Lecture Videos Lecture 10: Hashing and Classes About this Video Topics covered: Hashing, bucket, collision, linear rehash, exceptions, classes, modules, built-in classes.\nResources Lecture code handout (PDF) Lecture code (PY) Check Yourself What does hashing do?\n› View/hide answer\nIt converts the object to be hashed into an int that lies within a pre-defined range.\nWhat is a bucket?\n› View/hide answer\nA list of items that have the same hash value.\nWhat are try blocks for?\n› View/hide answer\nTry blocks are used when a piece of code may not work in all cases or for all inputs. It consists of a try statement and an except statement. First the try statement is executed; if it throws an exception, the program uses the except statement instead of terminating the program.\nWhat does polymorphic mean?\n› View/hide answer\nWorks with a variety of different types.\nWhat is a module?\n› View/hide answer\nA collection of related functions.\nWhat is an object?\n› View/hide answer\nA collection of data and functions that operate on that data.\nProblem Sets Problem Set 4: The Caesar Cipher (Due) This assignment will deal with a well-known (though not very secure) encryption method called the Caesar cipher. In this problem set you will need to devise your own algorithms and will practice using recursion to solve a non-trivial problem.\nInstructions (PDF) Pseudocode (PDF) Code Files (ZIP) (This ZIP file contains: 1 .py file and 3 .txt files.) Solutions (ZIP) (This ZIP file contains: 2 .py files.) Problem Set 5 (Assigned) Problem set 5 is assigned in this session. The instructions and solutions can be found on the session page where it is due, Lecture 12 Introduction to Simulation and Random Walks.\nFurther Study These optional resources are provided for students that wish to explore this topic more fully.\nReadings After watching the lecture, you may want to read some of the following resources:\n12. Classes and objects. How to Think Like a Computer Scientist. Related Lectures 6.006 Introduction to Algorithms. 6.006 lectures assume a greater level of mathematical sophistication than does 6.00SC. Read the lecture notes on: Hashing I: Chaining, hash functions Hashing II: Table doubling, Karp-Rabin Hashing III: Open addressing « Previous | Next »\n"}


